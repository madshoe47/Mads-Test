<link rel="stylesheet" href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css"/>
<script src="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js" defer></script>

{%- assign product = section.settings.product -%}
{%- assign product_form_id = 'product-form-' | append: section.id -%}

<style>
  .swiper {
    width: 100%;
    height: 100%;
  }

  .swiper-button-next,
  .swiper-button-prev {
    color: #000;
  }

  .swiper-slide {
    text-align: center;
    font-size: 18px;
    background: #fff;
    /* Center slide text vertically */
    display: -webkit-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    -webkit-align-items: center;
    align-items: center;
  }

  .swiper-slide img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .swiper {
    width: 100%;
    height: 300px;
    margin-left: auto;
    margin-right: auto;
  }

  .swiper-slide {
    background-size: cover;
    background-position: center;
  }

  .mySwiper2 {
    height: 80%;
    width: 100%;
  }

  .mySwiper {
    height: 20%;
    box-sizing: border-box;
    padding: 10px 0;
  }

  .mySwiper .swiper-slide {
    width: 25%;
    height: 100%;
    opacity: 0.4;
  }

  .mySwiper .swiper-slide-thumb-active {
    opacity: 1;
  }

  .swiper-slide img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  .product--information {
    height: fit-content;
  }
</style>

<div>

  <div class="max-w-7xl mx-auto my-8">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
      <div class="product--medias">
        <div class="">
          <div class="swiper mySwiper2" style="--swiper-navigation-color: #fff; --swiper-pagination-color: #fff">
            <div class="swiper-wrapper">
              {% for media in product.media %}
                <div class="swiper-slide">
                  <div class="overflow-hidden p-2 h-[65vh]">
                    {% render 'product-media', media: media %}
                  </div>
                </div>
              {% endfor %}
            </div>
            <div thumbsSlider="" class="swiper mySwiper">
              <div class="swiper-wrapper">
                {% for media in product.media %}
                  <div class="swiper-slide">
                    <div class="overflow-hidden p-2">
                      {% render 'product-media', media: media %}
                    </div>
                  </div>
                {% endfor %}
              </div>
            </div>

            <div class="swiper-button-prev text-black"></div>
            <div class="swiper-button-next text-black"></div>
          </div>
        </div>
      </div>

    <div class="product--information p-2" 
         x-data="{ 
                quantity: 1,
                addToCart(){
                  let formData = new FormData($refs.product_form);
                  fetch('/cart/add.js', {
                      method: 'POST',
                      body: formData
                    })
                    .then(response => {
                      return response.json();
                    })
                    .then(response => {
                      this.$dispatch('cart-updated');
                      this.$dispatch('toggle-cart');
                    })
                    .catch((error) => {
                      console.error('Error:', error);
                    });
                }
              }"
     >
          {%- form 'product', product, id: product_form_id, class: 'form', novalidate: 'novalidate', x-ref: 'product_form' -%}
                 <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">


                    {% for block in section.blocks %}
                        {% case block.type %}
                            {% when 'vendor' %}
                                <div class="my-3">
                                    <span class="text-xs text-gray-500">{{ product.vendor }}</span>
                                </div>
                            {% when 'title' %}
                                <div class="my-3">
                                    <h1 class="text-3xl text-gray-900">{{ product.title }}</h1>
                                </div>
                            {% when 'price' %}
                                <div class="my-3" id="price-{{ section.id }}">
                                    <span class="text-base text-gray-500 line-through">{{ product.selected_or_first_available_variant.compare_at_price | money }}</span>
                                    <span class="text-lg text-gray-900">{{ product.selected_or_first_available_variant.price | money }}</span>

                                    {% if product.selected_or_first_available_variant.price < product.selected_or_first_available_variant.compare_at_price %}
                                        <span class="px-5 py-1 text-sm font-bold bg-red-500 rounded-full text-white mx-4">Sale</span>
                                    {% endif %}
                                </div>
                            {% when 'variant_selector' %}
                              {%- unless product.has_only_default_variant -%}
              {%- if block.settings.picker_type == 'button' -%}
                <variant-radios class="no-js-hidden block pb-3" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
                    {%- for option in product.options_with_values -%}
                        <fieldset class="js product-form__input">
                          <legend class="form__label font-medium py-2">{{ option.name }}</legend>
                            <div class="grid grid-cols-4 md:grid-cols-5 gap-2 ">
                              {%- for value in option.values -%}
                                <input class="sr-only" type="radio" id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                                      name="{{ option.name }}"
                                      value="{{ value | escape }}"
                                      form="{{ product_form_id }}"
                                      {% if option.selected_value == value %}checked{% endif %}
                                >
                                <label class="border p-2 inline-block text-sm text-center border-gray-700" for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}">
                                  {{ value }}
                                </label>
                              {%- endfor -%}
                            </div>
                        </fieldset>
                    {%- endfor -%}
                  <script type="application/json">
                    {{ product.variants | json }}
                  </script>
                </variant-radios>
              {%- else -%}
                <variant-selects class="no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
                  {%- for option in product.options_with_values -%}
                    <div class="product-form__input product-form__input--dropdown">
                      <label class="form__label" for="Option-{{ section.id }}-{{ forloop.index0 }}">
                        {{ option.name }}
                      </label>
                      <div class="select">
                        <select id="Option-{{ section.id }}-{{ forloop.index0 }}"
                          class="select__select"
                          name="options[{{ option.name | escape }}]"
                          form="{{ product_form_id }}"
                        >
                          {%- for value in option.values -%}
                            <option value="{{ value | escape }}" {% if option.selected_value == value %}selected="selected"{% endif %}>
                              {{ value }}
                            </option>
                          {%- endfor -%}
                        </select>
                        {% render 'icon-caret' %}
                      </div>
                    </div>
                  {%- endfor -%}

                  <script type="application/json">
                    {{ product.variants | json }}
                  </script>
                </variant-selects>
              {%- endif -%}
            {%- endunless -%}

                            {% when 'quantity' %}
                               <div class="product-form__input product-form__quantity" {{ block.shopify_attributes }}>
              <label class="form__label sr-only" for="Quantity-{{ section.id }}">
                {{ 'products.product.quantity.label' | t }}
              </label>
              <div class="product-quantity__wrapper grid grid-cols-3 border border-black" 
                x-data="{ 
                    quantity: 1,
                    minus(value) {
                      (this.quantity == 1) ? this.quantity = 1 : this.quantity -= value;
                    },
                    plus(value) {
                      this.quantity += value;
                    }
                  }">

                <button type="button" class=" min-h-[44px] w-full flex items-center justify-center cursor-pointer" @click="minus(1)">
                  <span class="sr-only">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>
                  {% render 'icon-minus' %}
                </button>

                <input type="number" x-model="quantity" name="quantity" class="product-quantity__input border-x text-center border-black" value="1" min="1" max="10">

                <button type="button" class=" min-h-[44px] w-full flex items-center justify-center cursor-pointer" @click="plus(1)">
                  <span class="sr-only">{{ 'products.product.quantity.increase' | t: product: product.title | escape }}</span>
                  {% render 'icon-plus' %}
                </button>

              </div>

            </div>
                            {% when 'description' %}
                                <div class="my-3">
                                    <p class="text-gray-700">{{ product.description }}</p>
                                </div>

                            {% when 'checkout_buttons' %}
                                <div class="my-3"
                                >
           
                                    <button type="button" name="add" @click="addToCart()" class="w-full px-6 py-4 bg-gray-900 text-white hover:bg-gray-700 rounded-sm my-2"
                                        {% if product.selected_or_first_available_variant.available == false %}
                                            disabled
                                        {% endif %}
                                    >
                                        {% if product.selected_or_first_available_variant.available == false %}
                                            Sold out
                                        {% else %}
                                            Add to cart
                                        {% endif %}
                                    </button>
                                    
                                </div>
                            {% else %}
                                
                        {% endcase %}
                    {% endfor %}
                    {%- endform -%}
            </div>
        </div>


    </div>
  </div>

</div>

<script>
  class VariantSelector extends HTMLElement {
    constructor() {
      super();
      this.addEventListener("change", this.onVariantChange);
    }
    onVariantChange() {
      window.setInterval(function() {
        var uri = window.location.toString();
        if (uri.indexOf("?") > 0) {
          var clean_uri = uri.substring(0, uri.indexOf("?"));
          window.history.replaceState({}, document.title, clean_uri);
        }
      }, 0);
      this.getSelectedOptions();
      this.getSelectedVariant();
      if (this.currentVariant) {
        this.updateFormID();
        this.updatePrice();
        this.getFormData();
      };
    }

    getSelectedOptions() {
      this.options = Array.from(this.querySelectorAll('select'), (select) => select.value);
     
    }
    getVariantJSON() {
      this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
      return this.variantData;
    }
    getSelectedVariant() {
      this.currentVariant = this.getVariantJSON().find((variant) => {
        const findings = !variant.options.map((option, index) => {
          return this.options[index] === option;
        }).includes(false);
        if (findings) 
          return variant;
        
      });
    }
    updateFormID() {
      const form_input = document.querySelector(`#product-form-${this.dataset.section}`).querySelector('input[name="id"]'); 
      form_input.value = this.currentVariant.id;
    }
    updatePrice() {
      fetch(`${
        this.dataset.url
      }?variant=${
        this.currentVariant.id
      }&section_id=${
        this.dataset.section
      }`).then((response) => response.text()).then((responseText) => {
        const id = `price-${
          this.dataset.section
        }`;
        const html = new DOMParser().parseFromString(responseText, 'text/html');
        const oldPrice = document.getElementById(id);
        const newPrice = html.getElementById(id);
        if (oldPrice && newPrice) 
          oldPrice.innerHTML = newPrice.innerHTML;
        



      });
    }
  }
  customElements.define("variant-selects", VariantSelector);
</script>




<script>
  document.addEventListener('DOMContentLoaded', function() {
    try {
      var swiper = new Swiper(".mySwiper", {
        loop: true,
        spaceBetween: 10,
        slidesPerView: 4,
        freeMode: false,
        watchSlidesProgress: true
      });
      var swiper2 = new Swiper(".mySwiper2", {
        loop: true,
        spaceBetween: 10,
        navigation: {
          nextEl: ".swiper-button-next",
          prevEl: ".swiper-button-prev"
        },
        thumbs: {
          swiper: swiper
        }
      });
    } catch (e) {
      console.log("SwiperJS is not defined: " + e);
    }
  })
</script>

<script type="application/ld+json">
  {
    "@context": "http://schema.org/",
    "@type": "Product",
    "name": {{ product.title | json }},
    "url": {{ shop.url | append: product.url | json }},
    {% if seo_media -%}
      {%- assign media_size = seo_media.preview_image.width -%}
      "image": [
        {{ seo_media | image_url: width: media_size | prepend: "https:" | json }}
      ],
    {%- endif %}
    "description": {{ product.description | strip_html | json }},
    {% if product.selected_or_first_available_variant.sku != blank -%}
      "sku": {{ product.selected_or_first_available_variant.sku | json }},
    {%- endif %}
    "brand": {
      "@type": "Thing",
      "name": {{ product.vendor | json }}
    },
    "offers": [
      {%- for variant in product.variants -%}
        {
          "@type" : "Offer",
          {%- if variant.sku != blank -%}
            "sku": {{ variant.sku | json }},
          {%- endif -%}
          "availability" : "http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}",
          "price" : {{ variant.price | divided_by: 100.00 | json }},
          "priceCurrency" : {{ cart.currency.iso_code | json }},
          "url" : {{ shop.url | append: variant.url | json }}
        }{% unless forloop.last %},{% endunless %}
      {%- endfor -%}
    ]
  }
</script>


{% schema %}
  {
    "name": "main-product-show",
    "blocks": [
      {
        "type": "vendor",
        "name": "Vendor",
        "limit": 1
      },
      {
        "type": "title",
        "name": "Title",
        "limit": 1
      },
      {
        "type": "price",
        "name": "Price",
        "limit": 1
      },
      {
        "type": "variant_selector",
        "name": "Variant Selector",
        "limit": 1
      }, {
        "type": "quantity",
        "name": "Quantity",
        "limit": 1
      }, {
        "type": "description",
        "name": "Description",
        "limit": 1
      }, {
        "type": "checkout_buttons",
        "name": "Checkout Buttons",
        "limit": 1
      }
    ],
    "settings": [
      {
        "type": "product",
        "id": "product",
        "label": "Product"
      }
    ]

  }
{% endschema %}