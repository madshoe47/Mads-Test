<div class="bg-white">
  <div class="mx-auto max-w-2xl py-16 px-4 sm:py-24 sm:px-6 lg:max-w-7xl lg:px-8">
    <div class="lg:grid lg:grid-cols-2 lg:items-start lg:gap-x-8">
      <!-- Image gallery -->
      <div class="flex flex-col-reverse">
        <!-- Image selector -->
        <div class="mx-auto mt-6 hidden w-full max-w-2xl sm:block lg:max-w-none">
          <div class="grid grid-cols-4 gap-6" aria-orientation="horizontal" role="tablist">
            {% for media in product.media %}
              <button id="tabs-1-tab-1" class="relative flex h-24 cursor-pointer items-center justify-center rounded-md bg-white text-sm font-medium uppercase text-gray-900 hover:bg-gray-50 focus:outline-none focus:ring focus:ring-opacity-50 focus:ring-offset-4" aria-controls="tabs-1-panel-1" role="tab" type="button">
                <span class="sr-only">
                  Angled view
                </span>
                <span class="absolute inset-0 overflow-hidden rounded-md">
                  {% render 'product-media', media: media, class: "h-full w-full object-cover object-center" %}
                </span>
                <!-- Selected: "ring-indigo-500", Not Selected: "ring-transparent" -->
                <span class="ring-transparent pointer-events-none absolute inset-0 rounded-md ring-2 ring-offset-2" aria-hidden="true"></span>
              </button>
            {% endfor %}

            <!-- More images... -->
          </div>
        </div>

        <div class="aspect-w-1 aspect-h-1 w-full">
          <!-- Tab panel, show/hide based on tab state. -->
          {% for media in product.media %}
            <div id="tabs-1-panel-1" aria-labelledby="tabs-1-tab-1" role="tabpanel" tabindex="0">
              {% render 'product-media', media: media, class: "h-full w-full object-cover object-center sm:rounded-lg" %}
            </div>
          {% endfor %}
          <!-- More images... -->
        </div>
      </div>

      <!-- Product info -->
      <div class="mt-10 px-4 sm:mt-16 sm:px-0 lg:mt-0 h-[600px] overflow-y-scroll">
        {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
            <input type="hidden" name="id" value="{{ selected_variant.id }}">

        {% for block in section.blocks %}
        {% case block.type %}

          {% when 'title' %}
            <h2 class="text-3xl font-bold tracking-tight text-gray-900">{{ product.title | escape }}</h2> 

        {% when 'price' %}
            <div class="mt-3">
                <h2 class="sr-only">Product information</h2>
                <div class="no-js-hidden" id="price-{{ section.id }}" role="status" {{ block.shopify_attributes }}>
                    {%- render '_price-element', product: product, class: 'text-3xl tracking-tight text-gray-900' -%}
                </div>
            </div>

        {% when 'description' %}
            <div class="mt-6">
                <h3 class="sr-only">Description</h3>
                <div class="space-y-6 text-base text-gray-700">
                    <p>{{ product.description }}</p>
                </div>
            </div>
         
        {% when 'variant_selector' %}
            {%- unless product.has_only_default_variant -%}
              {%- if block.settings.picker_type == 'button' -%}
                <variant-radios class="no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
                    {%- if option.value == "Color" -%}
                        {%- for option in product.options_with_values -%}
                            <fieldset class="js product-form__input mt-2">
                                <legend class="form__label sr-only">Choose {{ option.name }}</legend>
                                <span class="flex items-center space-x-3">
                                    {%- for value in option.values -%}
                                        <input 
                                            type="radio" 
                                            id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                                            name="{{ option.name }}"
                                            value="{{ value | escape }}"
                                            form="{{ product_form_id }}"
                                            class="sr-only" aria-labelledby="color-choice-0-label"
                                        {% if option.selected_value == value %}checked{% endif %}>                                
                                            {%- if product.variants[forloop.index0].metafields.color.value and option.value == "Color" -%}
                                                <label for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}" style="background-color: {{ product.variants[forloop.index0].metafields.color.value }}" class="-m-0.5 relative p-0.5 rounded-full flex items-center justify-center cursor-pointer focus:outline-none ring-gray-700">
                                                    &nbsp;
                                                </label>
                                            {%- else -%}
                                                <label for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}" class="-m-0.5 relative p-0.5 rounded-full flex items-center justify-center cursor-pointer focus:outline-none ring-gray-700">
                                                    {{ value }}
                                                </label>
                                        {%- endif -%}
                                    {%- endfor -%}
                                </span>
                            </fieldset>
                        {%- endfor -%}
                    {%- endif -%}  
                    {% if option.value == "Size" %}
                        {%- for option in product.options_with_values -%}
                            <fieldset class="js product-form__input mt-2">
                            <legend class="form__label sr-only">Choose {{ option.name }}</legend>
                                <div class="grid grid-cols-3 gap-3 sm:grid-cols-6">
                                    {%- for value in option.values -%}
                                        <input type="radio" id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                                            name="{{ option.name }}"
                                            value="{{ value | escape }}"
                                            form="{{ product_form_id }}"
                                            class="sr-only" aria-labelledby="size-choice-0-label"
                                        {% if option.selected_value == value %}checked{% endif %}>                                
                                            {%- if option.value == "Size" -%}
                                                <label for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}" class="-m-0.5 relative p-0.5 rounded-full flex items-center justify-center cursor-pointer focus:outline-none ring-gray-700">
                                                    {{ value }}
                                                </label>
                                        {%- endif -%}
                                    {%- endfor -%}
                                </div>
                            </fieldset>
                        {%- endfor -%}            
                    % endif %}   
                    <script type="application/json">
                        {{ product.variants | json }}
                    </script>
                </variant-radios>
        {% when 'quantity' %}
            <div class="my-3">
                <label for="Quantity-{{ section.id }}">Quantity</label>
                <div class="my-2">
                    <input type="number" name="quantity" id="Quantity-{{ section.id }}" value="1" min="1" class="w-full border px-3 py-3">
                </div>
            </div>

        {% when 'checkout_buttons' %}
            <div class="sm:flex-col1 mt-10 flex">
                <button type="submit" name="add" class="flex max-w-xs flex-1 items-center justify-center rounded-md border border-transparent bg-indigo-600 py-3 px-8 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 focus:ring-offset-gray-50 sm:w-full"
                {% if selected_variant.available == false %} disabled {% endif %}
                >
                    {% if selected_variant.available == false %}
                        Sold out
                    {% else %}
                        Add to cart
                    {% endif %}
                </button>
            </div>    

    {% endcase %}
    {% endfor %}
    {% endform %}

        <section aria-labelledby="details-heading" class="mt-12">
          <h2 id="details-heading" class="sr-only">Additional details</h2>

          <div class="divide-y divide-gray-200 border-t">
            <div>
              <h3>
                <!-- Expand/collapse question button -->
                <button type="button" class="group relative flex w-full items-center justify-between py-6 text-left" aria-controls="disclosure-1" aria-expanded="false">
                  <!-- Open: "text-indigo-600", Closed: "text-gray-900" -->
                  <span class="text-gray-900 text-sm font-medium">Features</span>
                  <span class="ml-6 flex items-center">
                    <!--
                    Heroicon name: outline/plus

                    Open: "hidden", Closed: "block"
                    -->
                    <svg class="block h-6 w-6 text-gray-400 group-hover:text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                      <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15"/>
                    </svg>
                    <!--
                    Heroicon name: outline/minus

                    Open: "block", Closed: "hidden"
                    -->
                    <svg class="hidden h-6 w-6 text-indigo-400 group-hover:text-indigo-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                      <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 12h-15"/>
                    </svg>
                  </span>
                </button>
              </h3>
              <div class="prose prose-sm pb-6" id="disclosure-1">
                <ul role="list">
                  <li>Multiple strap configurations</li>

                  <li>Spacious interior with top zip</li>

                  <li>Leather handle and tabs</li>

                  <li>Interior dividers</li>

                  <li>Stainless strap loops</li>

                  <li>Double stitched construction</li>

                  <li>Water-resistant</li>
                </ul>
              </div>
            </div>

            <!-- More sections... -->
          </div>
        </section>
      </div>
    </div>
  </div>
</div>

<script>
    class VariantSelector extends HTMLElement {
        constructor() {
            super();
            this.addEventListener("change", this.onVariantChange);
        }
        onVariantChange() {
            window.setInterval(function () {
                var uri = window.location.toString();
                if (uri.indexOf("?") > 0) {
                    var clean_uri = uri.substring(0, uri.indexOf("?"));
                    window.history.replaceState({}, document.title, clean_uri);
                }
            }, 0);
            this.getSelectedOptions();
            this.getSelectedVariant();
            if (this.currentVariant) {
                this.updateURL();
                this.updateFormID();
                this.updatePrice();
            };
        }
        getSelectedOptions() {
            this.options = Array.from(this.querySelectorAll('select'), (select) => select.value);
            console.log(this.options);
        }
        getVariantJSON() {
            this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
            return this.variantData;
        }
        getSelectedVariant() {
            this.currentVariant = this.getVariantJSON().find((variant) => {
                const findings = !variant.options.map((option, index) => {
                    return this.options[index] === option;
                }).includes(false);
                if (findings)
                    return variant;
            });
            console.log(this.currentVariant);
        }
        updateURL() {
            if (!this.currentVariant)
                return;
            window.history.replaceState({}, '', `${this.dataset.url
                }?variant=${this.currentVariant.id
                }`);
        }
        updateFormID() {
            const form_input = document.querySelector("#product-form").querySelector('input[name="id"]');
            form_input.value = this.currentVariant.id;
        }
        updatePrice() {
            fetch(`${this.dataset.url
                }?variant=${this.currentVariant.id
                }&section_id=${this.dataset.section
                }`).then((response) => response.text()).then((responseText) => {
                    const id = `price-${this.dataset.section
                        }`;
                    const html = new DOMParser().parseFromString(responseText, 'text/html');
                    const oldPrice = document.getElementById(id);
                    const newPrice = html.getElementById(id);
                    if (oldPrice && newPrice)
                        oldPrice.innerHTML = newPrice.innerHTML;
                });
        }
    }
    customElements.define("variant-selector", VariantSelector);
</script>

<script>
    document.addEventListener('DOMContentLoaded', function(){
        try {
            const swiper = new Swiper('.swiper', {
                direction: 'horizontal',
                pagination: {
                    el: '.swiper-pagination'
                },
                navigation: {
                    prevEl: '.swiper-button-prev',
                    nextEl: '.swiper-button-next'
                }
    })
        } catch(e) {
            console.log("SwiperJS is not defined: " + e);
        }
    })
    
</script>

{% schema %}
{
"name": "template-product",
"blocks": [
{
"type": "title",
"name": "Title",
"limit": 1
},
{
"type": "price",
"name": "Price",
"limit": 1
},
{
"type": "variant_selector",
"name": "Variant Selector",
"limit": 1
}, {
"type": "quantity",
"name": "Quantity",
"limit": 1
}, {
"type": "description",
"name": "Description",
"limit": 1
}, {
"type": "checkout_buttons",
"name": "Checkout Buttons",
"limit": 1
}
],
 "settings": [
      {
        "type": "product",
        "id": "product",
        "label": "Product"
      }
    ]
}
{% endschema %}